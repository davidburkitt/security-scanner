trigger:
- none

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Set Python version $(python.version)'

- script: python -m pip install --upgrade pip
  displayName: 'Update PIP'

- script: |
    cd $(System.DefaultWorkingDirectory)
    git clone https://github.com/nccgroup/ScoutSuite
    cd ScoutSuite
    pip install -r requirements.txt
    az login -u $(u) -p $(p)
    python scout.py azure --cli
    tail -n +2 ./scoutsuite-report/scoutsuite-results/scoutsuite_results_azure-tenant-*.js > $(System.DefaultWorkingDirectory)/results.json
  displayName: 'Run ScoutSuite'

# Copy results to storage
#- task: AzureCLI@1
#  displayName: Az CLI Copy to Storage
#  inputs:
#    azureSubscription: $(azureSubscription)
#    scriptLocation: inlineScript
#    inlineScript: |
#      az storage blob upload-batch \
#        --destination \$web \
#        --account-name "$(storageAccountName)" \
#        --source "$(Agent.BuildDirectory)/$(outputDir)"

# process scoutsuite-report/scoutsuite-results/scoutsuite_results_azure-tenant-*.js | python3 -mjson.tool
- script: |
    pip install -r requirements.txt
    python findInJsonPath.py -file results.json -path 'services.*.findings.*.flagged_items,description,items' -operand 1 -operator '<' -index flagged_items | tee -a results.json
    flaggedItems=`cat results.json | grep $(subscription) | wc -l`
    echo "##vso[task.setvariable variable=flaggedItems;]$flaggedItems"
  displayName: 'Parse ScoutSuite results'

- task: PythonScript@0
  inputs:
    scriptSource: filePath
    scriptPath: slackAlert.py
    arguments: -uri $(SLACK_WEBHOOK) -header "Security Alert Scanning" -title "Vulnerabilities Detected" -text "$(flaggedItems) issues detected in $(subscription)" -colour "#FF0000"
  displayName: 'Slack notification'

# raise slack alert summary
#- task: PowerShell@2
#  displayName: Run Slack Alert PWSH
#  inputs:
#    targetType: filePath
#    filePath: 'slackAlert.ps1'
#    arguments: '-SlackNotificationUrl $(SLACK_WEBHOOK) -SlackNotification "$(flaggedItems) issues detected in $(subscription)"'


